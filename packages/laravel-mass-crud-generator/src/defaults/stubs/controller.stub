<?php

namespace {{controllerNamespace}};

use App\Models\{{modelName}};
{{onlyControllerNamespace}}
use App\Http\Requests\{{modelName}}Request;
use Illuminate\Http\Request;
use Frs\LaravelMassCrudGenerator\Utils\Response;
use Frs\LaravelMassCrudGenerator\Utils\Helper;
use Illuminate\Support\Facades\Log;

class {{controllerName}} extends Controller
{
    public function index()
    {
        try {
            ${{modelVariables}} = {{modelName}}::paginate(10);
            $metaData = Helper::getMetaData(${{modelVariables}});
            return view('{{modelVariable}}.index', compact('{{modelVariables}}'));
        } catch (\Exception $e) {
            Log::error($e->getMessage());
            return Response::serverError(500, 'Server Error');
        }
    }

    public function create()
    {
        return view('{{modelVariable}}.create');
    }

    public function store({{modelName}}Request $request)
    {
        try {
            ${{modelVariable}} = {{modelName}}::create($request->all());
            return redirect()->route('{{modelVariable}}.index')->with('success', '{{modelName}} created successfully.');
        } catch (\Exception $e) {
            Log::error($e->getMessage());
            return Response::serverError(500, 'Sorry, {{modelName}} creation failed');
        }
    }

    public function show(string $id)
    {
        try {
            ${{modelVariable}} = {{modelName}}::find($id);
            if (!${{modelVariable}}) {
                return Response::notFound(404, '{{modelName}} not found');
            }
            return view('{{modelVariable}}.show', compact('{{modelVariable}}'));
        } catch (\Exception $e) {
            Log::error($e->getMessage());
            return Response::serverError('Sorry, {{modelName}} retrieval failed', 500);
        }
    }
    
    public function edit({{modelName}} ${{modelVariable}})
    {
        return view('{{modelVariable}}.edit', compact('{{modelVariable}}'));
    }

    public function update({{modelName}}Request $request, string $id)
    {
        try {
            ${{modelVariable}} = {{modelName}}::find($id);
            if (!${{modelVariable}}) {
                return Response::notFound(404, '{{modelName}} not found');
            }

            $validatedData = $request->validated(); // Ensure validation is performed
            ${{modelVariable}}->update($validatedData);

            return redirect()->route('{{modelVariable}}.index')->with('success', '{{modelName}} updated successfully.');
        } catch (\Exception $e) {
            Log::error($e->getMessage());
            return Response::serverError(500, 'Sorry, {{modelName}} updating failed');
        }
    }

    public function destroy(string $id)
    {
        try {
            ${{modelVariable}} = {{modelName}}::find($id);
            if (!${{modelVariable}}) {
                return Response::notFound(404, '{{modelName}} not found');
            }

            ${{modelVariable}}->delete();
            return redirect()->route('{{modelVariable}}.index')->with('success', '{{modelName}} deleted successfully.');
        } catch (\Exception $e) {
            Log::error($e->getMessage());
            return Response::serverError(500, 'Sorry, {{modelName}} deletion failed');
        }
    }
}
